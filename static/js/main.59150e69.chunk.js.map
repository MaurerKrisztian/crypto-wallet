{"version":3,"sources":["services/WalletService.ts","components/DownloadBtn.tsx","components/WalletCreator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WalletService","web3","Web3","password","newWallet","this","eth","accounts","create","encryptedWallet","encrypt","privateKey","console","log","decrypt","DownloadBtn","props","fileName","fileContent","buttonName","className","onClick","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","WalletCreator","account","walletService","state","errors","onChange","e","setState","passwordInput","target","value","handleChange","crateAccount","address","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mrBAGaA,EAAb,iDACIC,KAAO,IAAIC,IADf,gDAGI,SAAaC,GACT,IAAMC,EAAYC,KAAKJ,KAAKK,IAAIC,SAASC,SACnCC,EAAkBJ,KAAKJ,KAAKK,IAAIC,SAASG,QAAQN,EAAUO,WAAYR,GAG7E,OADAS,QAAQC,IAAIT,EAAWK,GAChB,CAACL,YAAWK,qBAR3B,4BAWI,SAAeA,EAAsBN,GACjC,OAAOE,KAAKJ,KAAKK,IAAIC,SAASO,QAAQL,EAAiBN,OAZ/D,K,QCqBeY,MAtBf,SAAqBC,GACjB,IAAMC,EAAmBD,EAAMC,SACzBC,EAAsBF,EAAME,YAC5BC,EAAqBH,EAAMG,WAYjC,OACI,qBAAKC,UAAU,cAAf,SACI,wBAAQC,QAZQ,WACpB,IAAMC,EAAUC,SAASC,cAAc,KACjCC,EAAO,IAAIC,KAAK,CAACR,GACnB,CAACS,KAAM,6BACXL,EAAQM,KAAOC,IAAIC,gBAAgBL,GACnCH,EAAQS,SAAWd,EACnBM,SAASS,KAAKC,YAAYX,GAC1BA,EAAQY,SAKJ,SAAmCf,OCPzCgB,E,4MACFC,a,8CAEA,WAAU,IAAD,aACCC,EAAgB,IAAIrC,EAwB1B,OACI,sBAAKoB,UAAU,gBAAf,UACI,sCAAIf,KAAKiC,aAAT,aAAI,EAAYC,SADpB,YAGI,uBAAOC,SAAU,SAACC,IATL,SAACA,GAClB,EAAKC,SAAS,CAACC,cAAeF,EAAEG,OAAOC,QAAQ,eASvCC,CAAaL,MAEjB,wBAAQpB,QA7BK,WAAO,IAAD,IACjBlB,EAAQ,UAAG,EAAKmC,aAAR,aAAG,EAAYK,cACxBxC,GAML,EAAKuC,SAAS,CACVH,OAAQ,KAEZ,EAAKH,QAAUC,EAAcU,aAAa5C,GAC1C,EAAKuC,SAAS,CACV/B,WAAU,UAAE,EAAKyB,eAAP,aAAE,EAAchC,UAAUO,cAVpC,EAAK+B,SAAS,CACVH,OAAQ,2BAyBZ,2BACClC,KAAK+B,QACF,gCACI,sDACA,oDAAa/B,KAAK+B,eAAlB,iBAAa,EAAchC,iBAA3B,aAAa,EAAyB4C,WAEtC,cAAC,EAAD,CAAa/B,SAAU,iBAAkBC,YAAab,KAAKiC,MAAM3B,WACpDQ,WAAY,4BAE5B,U,GA5CO8B,IAAMC,WAqDnBf,ICpDAgB,MATf,WACE,OACE,qBAAK/B,UAAU,MAAf,SAEE,cAAC,EAAD,OCMSgC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,SAM1BZ,M","file":"static/js/main.59150e69.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\n\r\nexport class WalletService {\r\n    web3 = new Web3()\r\n\r\n    crateAccount(password: string) {\r\n        const newWallet = this.web3.eth.accounts.create();\r\n        const encryptedWallet = this.web3.eth.accounts.encrypt(newWallet.privateKey, password); // can store to database\r\n\r\n        console.log(newWallet, encryptedWallet)\r\n        return {newWallet, encryptedWallet}\r\n    }\r\n\r\n    decryptAccount(encryptedWallet: any, password: string) {\r\n        return this.web3.eth.accounts.decrypt(encryptedWallet, password)\r\n    }\r\n\r\n    // crateWallet(password: string, accountNumber: number) {\r\n    //     const newWallet = this.web3.eth.accounts.wallet.create(accountNumber);\r\n    //     const encryptedWallet = this.web3.eth.accounts.wallet.encrypt(newWallet.privateKey, password); // can store to database\r\n    //\r\n    //     console.log(newWallet, encryptedWallet)\r\n    // }\r\n    //\r\n    // decryptWallet(encryptedWallet: any, password: string) {\r\n    //     return this.web3.eth.accounts.wallet.decrypt(encryptedWallet, password)\r\n    // }\r\n}","import React from 'react';\r\n\r\nfunction DownloadBtn(props: any) {\r\n    const fileName: string = props.fileName\r\n    const fileContent: string = props.fileContent\r\n    const buttonName: string = props.buttonName\r\n\r\n    const downloadTxtFile = () => {\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([fileContent],\r\n            {type: 'text/plain;charset=utf-8'});\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = fileName;\r\n        document.body.appendChild(element);\r\n        element.click();\r\n    }\r\n\r\n    return (\r\n        <div className=\"DownloadBtn\">\r\n            <button onClick={downloadTxtFile}>{buttonName}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DownloadBtn;\r\n","import React, {useState} from 'react';\r\nimport {WalletService} from \"../services/WalletService\";\r\nimport DownloadBtn from \"./DownloadBtn\";\r\n\r\ninterface IState {\r\n    privateKey?: any,\r\n    account?: any,\r\n    accountStr?: any,\r\n    passwordInput?: string,\r\n    errors?: string\r\n}\r\n\r\nclass WalletCreator extends React.Component<any, IState> {\r\n    account: any;\r\n\r\n    render() {\r\n        const walletService = new WalletService()\r\n\r\n        const createWallet = () => {\r\n            const password = this.state?.passwordInput\r\n            if (!password) {\r\n                this.setState({\r\n                    errors: \"Password is required!\"\r\n                })\r\n                return\r\n            }\r\n            this.setState({\r\n                errors: \"\"\r\n            })\r\n            this.account = walletService.crateAccount(password)\r\n            this.setState({\r\n                privateKey: this.account?.newWallet.privateKey\r\n            })\r\n        }\r\n\r\n        const handleChange = (e: any) => {\r\n            this.setState({passwordInput: e.target.value}, () => {\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"WalletCreator\">\r\n                <p>{this.state?.errors}</p>\r\n                password:\r\n                <input onChange={(e) => {\r\n                    handleChange(e)\r\n                }}/>\r\n                <button onClick={createWallet}>create wallet</button>\r\n                {this.account ? (\r\n                    <div>\r\n                        <p> Account information:</p>\r\n                        <p>address: {this.account?.newWallet?.address}</p>\r\n\r\n                        <DownloadBtn fileName={\"privateKey.txt\"} fileContent={this.state.privateKey}\r\n                                     buttonName={\"download private key\"}/>\r\n                    </div>\r\n                ) : (\"\")}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WalletCreator;\r\n","import React from 'react';\nimport './App.css';\nimport WalletCreator from \"./components/WalletCreator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <WalletCreator></WalletCreator>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}